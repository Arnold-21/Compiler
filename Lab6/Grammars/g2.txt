optionalsign simpleintexpression simpleboolexpression simplestringexpression program declaration statement simpledeclaration arraydeclaration type identifierlist identifier expression intexpression boolexpression charexpression stringexpression intvalue boolvalue charvalue stringvalue positivint simpleidentifierlist non_zero_digit digit assignstatement ifstatement whilestatement functionstatement functionname expressionlist digitlist letter lastofidentifier insideString
+ - * / % && || ! = == < <= > >= { } ( ) [ ] ; space newline " , ' int bool char string if else while print readInt readString array true false set get epsilon a b c d e f g h i j k l m n o p q r s t u v w x y z A B C D E F G H I J K L M N O P Q R S T U V W X Y Z 0 1 2 3 4 5 6 7 8 9
program
program -> declaration statement
declaration -> simpledeclaration ; declaration
declaration -> arraydeclaration ; declaration
declaration -> epsilon
simpledeclaration -> type identifierlist
type -> int 
type -> bool
type -> char
type -> string
identifierlist -> identifier
identifierlist -> identifier = expression
identifierlist -> identifier , identifierlist
identifierlist -> identifier = expression , identifierlist
expression -> intexpression
expression -> boolexpression
expression -> charexpression
expression -> stringexpression
simpleintexpression -> intvalue
simpleintexpression -> identifier
intexpression -> simpleintexpression
intexpression -> ( simpleintexpression * intexpression )
intexpression -> ( simpleintexpression / intexpression )
intexpression -> ( simpleintexpression % intexpression )
intexpression -> ( simpleintexpression + intexpression )
intexpression -> ( simpleintexpression - intexpression )
intexpression -> simpleintexpression * intexpression
intexpression -> simpleintexpression / intexpression
intexpression -> simpleintexpression % intexpression
intexpression -> simpleintexpression + intexpression
intexpression -> simpleintexpression - intexpression
simpleboolexpression -> boolvalue
simpleboolexpression -> ! identifier
simpleboolexpression -> identifier
boolexpression -> simpleboolexpression
boolexpression -> ( simpleboolexpression && boolexpression )
boolexpression -> ( simpleboolexpression || boolexpression )
boolexpression -> ( simpleboolexpression == boolexpression )
boolexpression -> ( intexpression == intexpression )
boolexpression -> ( intexpression < intexpression )
boolexpression -> ( intexpression <= intexpression )
boolexpression -> ( intexpression > intexpression )
boolexpression -> ( intexpression >= intexpression )
boolexpression -> simpleboolexpression && boolexpression
boolexpression -> simpleboolexpression || boolexpression
boolexpression -> simpleboolexpression == boolexpression
boolexpression -> intexpression == intexpression
boolexpression -> intexpression < intexpression
boolexpression -> intexpression <= intexpression
boolexpression -> intexpression > intexpression
boolexpression -> intexpression >= intexpression
charexpression -> charvalue
charexpression -> identifier
simplestringexpression -> stringvalue
simplestringexpression -> identifier
stringexpression -> simplestringexpression
stringexpression -> ( simplestringexpression + stringexpression )
stringexpression -> simplestringexpression + stringexpression
arraydeclaration -> array [ type ] [ positivint ] simpleidentifierlist
positivint -> non_zero_digit digitlist
digitlist -> digit digitlist
digitlist -> epsilon
simpleidentifierlist -> identifier
simpleidentifierlist -> identifier, simpleidentifierlist
statement -> assignstatement ; statement
statement -> ifstatement statement
statement -> whilestatement statement
statement -> functionstatement ; statement
statement -> epsilon
assignstatement -> identifier = expression
assignstatement -> identifier = functionstatement
ifstatement -> if ( boolexpression ) { statement }
ifstatement -> if ( boolexpression ) { statement } else { statement }
whilestatement -> while ( boolexpression ) { statement }
functionstatement -> functionname ( expressionlist )
functionstatement -> functionname ( )
functionname -> readInt
functionname -> readString
functionname -> get
functionname -> set
functionname -> print
expressionlist -> expression
expressionlist -> expression , expressionlist
letter -> A
letter -> B
letter -> C
letter -> D
letter -> E
letter -> F
letter -> G
letter -> H
letter -> I
letter -> J
letter -> K
letter -> L
letter -> M
letter -> N
letter -> O
letter -> P
letter -> Q
letter -> R
letter -> S
letter -> T
letter -> U
letter -> V
letter -> W
letter -> X
letter -> Y
letter -> Z
letter -> a
letter -> b
letter -> c
letter -> d
letter -> e
letter -> f
letter -> g
letter -> h
letter -> i
letter -> j
letter -> k
letter -> l
letter -> m
letter -> n
letter -> o
letter -> p
letter -> q
letter -> r
letter -> s
letter -> t
letter -> u
letter -> v
letter -> w
letter -> x
letter -> y
letter -> z
digit -> 0
digit -> 1
digit -> 2
digit -> 3
digit -> 4
digit -> 5
digit -> 6
digit -> 7
digit -> 8
digit -> 9
non_zero_digit -> 1
non_zero_digit -> 2
non_zero_digit -> 3
non_zero_digit -> 4
non_zero_digit -> 5
non_zero_digit -> 6
non_zero_digit -> 7
non_zero_digit -> 8
non_zero_digit -> 9
identifier -> letter lastofidentifier
lastofidentifier -> letter lastofidentifier
lastofidentifier -> digit lastofidentifier
lastofidentifier -> epsilon
boolvalue -> true
boolvalue -> false
charvalue -> ' letter '
charvalue -> ' digit '
intvalue -> optionalsign positivint
intvalue -> 0
optionalsign -> +
optionalsign -> - 
optionalsign -> epsilon
stringvalue -> " insideString "
insideString -> space insideString
insideString -> letter insideString
insideString -> digit insideString
insideString -> epsilon